//= require serviceworker-companion

console.log('[Service Worker] Hello world!');

self.addEventListener("push", function(event) {
  var title = (event.data && event.data.text().split("-")[0]) || "Message from Commercial view";
  var body; body = event.data.text().split("-")[1];
  var tag = "push-simple-demo-notification-tag";
  var icon = 'logo.png';

  event.waitUntil(
      self.registration.showNotification(title, {
          body: body,
          icon: icon,
          tag: tag
      })
  );
});

self.addEventListener('notificationclick', function(event) {
    event.notification.close()
    var url = "/"
    event.waitUntil( clients.matchAll({type: 'window'}).then( function(windowClients) {
            for (var i = 0; i < windowClients.length; i++) {
                var client = windowClients[i];
                if (client.url === url && 'focus' in client) { return client.focus()}
            }
            if (clients.openWindow) { return clients.openWindow(url) }
        })
    );
});

var CACHE_NAME = 'v1-cached-assets'

function onActivate(event) {
  console.log('[Serviceworker]', "Activating!", event);
  event.waitUntil(
    caches.keys().then(function(cacheNames) {
      return Promise.all(
        cacheNames.filter(function(cacheName) {
          // Return true if you want to remove this cache,
          // but remember that caches are shared across
          // the whole origin
           return cacheName.indexOf('v1') !== 0;
        }).map(function(cacheName) {
          return caches.delete(cacheName);
        })
      );
    })
  );
}

//self.addEventListener('install', onInstall)
self.addEventListener('activate', onActivate)

